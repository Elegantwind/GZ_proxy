{"version":3,"sources":["webpack:///./src/api/filter-config.js","webpack:///src/components/FilterRequest.vue","webpack:///./src/components/FilterRequest.vue?bfe7","webpack:///./src/components/FilterRequest.vue"],"names":["TableDataRegular","regular","meaning","TableDataRegularExamples","examples","way","FilterRequest","data","tableData","tableDataRegular","tableDataRegularExamples","addFormVisible","addform","match","describe","selectFormVisible","selectform","id","deleteFormVisible","deleteform","clearFormVisible","cancelFormVisible","formLabelWidth","created","this","showAllFilter","mounted","_this","window","setInterval","complete","methods","_this2","$http","get","api","then","res","console","log","json","addFilter","_this3","post","code","$message","showClose","message","deleteFilter","_this4","selectFilter","_this5","clearFilter","_this6","cancelFilter","_this7","components_FilterRequest","render","_vm","_h","$createElement","_c","_self","attrs","accordion","title","type","on","click","$event","_v","visible","update:visible","model","label","label-width","auto-complete","value","callback","$$v","$set","expression","staticClass","slot","staticStyle","width","scopedSlots","_u","key","fn","scope","margin-left","_s","row","prop","staticRenderFns","Component","__webpack_require__","normalizeComponent","__webpack_exports__"],"mappings":"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","file":"static/js/6.6d1a5efa0efd36625d57.js","sourcesContent":["export let TableDataRegular = [\n\n  {\n    regular: '~a',\n    meaning: '匹配资产以响应：CSS，Javascript，Flash，图像。',\n  }, {\n    regular: '~b regex',\n    meaning: 'Body',\n  }, {\n    regular: '~bq regex',\n    meaning: 'Request body',\n  }, {\n    regular: '~bs regex',\n    meaning: 'Response body',\n  }, {\n    regular: '~c int',\n    meaning: 'HTTP response code',\n  }, {\n    regular: '~d regex',\n    meaning: '域',\n  }, {\n    regular: 'dst regex',\n    meaning: '匹配目标地址',\n  }, {\n    regular: '~e',\n    meaning: '匹配错误',\n  }, {\n    regular: '~h regex',\n    meaning: 'Header',\n  }, {\n    regular: '~hq regex',\n    meaning: 'Request header',\n  }, {\n    regular: '~hs regex',\n    meaning: 'Response header',\n  }, {\n    regular: '~http',\n    meaning: '匹配HTTP流',\n  }, {\n    regular: '~m regex',\n    meaning: '匹配方法',\n  }, {\n    regular: '~marked',\n    meaning: '匹配标记的流量',\n  }, {\n    regular: '~q',\n    meaning: '匹配没有相应的请求',\n  }, {\n    regular: '~s',\n    meaning: '匹配相应',\n  }, {\n    regular: '~src regex',\n    meaning: '匹配源地址',\n  }, {\n    regular: '~t regex',\n    meaning: 'Content-type header',\n  }, {\n    regular: '~tcp',\n    meaning: 'Match TCP flows',\n  }, {\n    regular: '~tq regex',\n    meaning: 'Request Content-Type header',\n  }, {\n    regular: '~ts regex',\n    meaning: 'Response Content-Type header',\n  }, {\n    regular: '~u regex',\n    meaning: '匹配URL',\n  }, {\n    regular: '~websocket',\n    meaning: 'Match WebSocket flows',\n  }, {\n    regular: '!',\n    meaning: 'not',\n  }, {\n    regular: '&',\n    meaning: 'and',\n  }, {\n    regular: '|',\n    meaning: 'or',\n  }, {\n    regular: '(...)',\n    meaning: 'grouping',\n  }]\n\nexport let TableDataRegularExamples = [\n  {\n    examples: '包含“google.com”的网址',\n    way: 'google\\\\.com'\n  }, {\n    examples: '主体包含字符串“test”的请求',\n    way: '~q ~b test'\n  }, {\n    examples: '除了具有text / html内容类型的请求之外的任何内容',\n    way: '!(~q & ~t \"text/html\")'\n  }\n]\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/filter-config.js","<template>\n  <div>\n    <el-collapse accordion>\n      <el-collapse-item title=\"已经添加的正则表达式\">\n        <div>\n          <el-row>\n            <el-button type=\"primary\" @click=\"addFormVisible = true\">新增正则表达式</el-button>\n            <el-dialog title=\"添加新的正则表达式\" :visible.sync=\"addFormVisible\">\n              <el-form :model=\"addform\">\n                <el-form-item label=\"正则表达式\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"addform.match\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"描述\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"addform.describe\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n              </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"addFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"addFilter()\">确 定</el-button>\n              </div>\n            </el-dialog>\n            <el-button type=\"success\" @click=\"selectFormVisible = true\">选择正则表达式</el-button>\n            <el-dialog title=\"选择正则表达式\" :visible.sync=\"selectFormVisible\">\n              <el-form :model=\"selectform\">\n                <el-form-item label=\"id\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"selectform.id\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n              </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"selectFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"selectFilter()\">确 定</el-button>\n              </div>\n            </el-dialog>\n            <el-button type=\"danger\" @click=\"cancelFormVisible = true\">取消正则表达式</el-button>\n            <el-dialog title=\"取消正则表达式\" :visible.sync=\"cancelFormVisible\">\n              <p>点击确认后会取消正则表达式</p>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"cancelFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"cancelFilter()\">确 定</el-button>\n              </div>\n            </el-dialog>\n            <el-button type=\"danger\" @click=\"deleteFormVisible = true\">删除正则表达式</el-button>\n            <el-dialog title=\"删除正则表达式\" :visible.sync=\"deleteFormVisible\">\n              <el-form :model=\"deleteform\">\n                <el-form-item label=\"id\" :label-width=\"formLabelWidth\">\n                  <el-input v-model=\"deleteform.id\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n              </el-form>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"deleteFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"deleteFilter()\">确 定</el-button>\n              </div>\n            </el-dialog>\n            <el-button type=\"danger\" @click=\"clearFormVisible = true\">清空正则表达式</el-button>\n            <el-dialog title=\"清空正则表达式\" :visible.sync=\"clearFormVisible\">\n              <p>确认后会清空所有的过滤正则表达式</p>\n              <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"clearFormVisible = false\">取 消</el-button>\n                <el-button type=\"primary\" @click=\"clearFilter()\">确 定</el-button>\n              </div>\n            </el-dialog>\n          </el-row>\n        </div>\n        <div>\n          <el-table\n            :data=\"tableData\"\n            style=\"width: 100%\">\n            <el-table-column\n              label=\"id\"\n              width=\"width: 25%\">\n              <template slot-scope=\"scope\">\n                <span style=\"margin-left: 10px\">{{ scope.row.id}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"正则表达式\"\n              width=\"width: 25%\">\n              <template slot-scope=\"scope\">\n                <span style=\"margin-left: 10px\">{{ scope.row.match}}</span>\n              </template>\n            </el-table-column>\n            <el-table-column\n              label=\"描述\"\n              width=\"width: 25%\">\n              <template slot-scope=\"scope\">\n                <span style=\"margin-left: 10px\">{{ scope.row.describe}}</span>\n              </template>\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-collapse-item>\n      <el-collapse-item title=\"以下是能够使用的正则表达式方法\">\n        <div>\n          <el-table\n            :data=\"tableDataRegular\"\n            style=\"width: 100%\">\n            <el-table-column\n              prop=\"regular\"\n              label=\"正则表达式\"\n              width=\"width: 50%\">\n            </el-table-column>\n            <el-table-column\n              prop=\"meaning\"\n              label=\"筛选含义\"\n              width=\"width: 50%\">\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-collapse-item>\n      <el-collapse-item title=\"正则表达式使用例子\">\n        <div>\n          <el-table\n            :data=\"tableDataRegularExamples\"\n            style=\"width: 100%\">\n            <el-table-column\n              prop=\"examples\"\n              label=\"示例\"\n              width=\"width: 50%\">\n            </el-table-column>\n            <el-table-column\n              prop=\"way\"\n              label=\"写法\"\n              width=\"width: 50%\">\n            </el-table-column>\n          </el-table>\n        </div>\n      </el-collapse-item>\n    </el-collapse>\n  </div>\n</template>\n<script>\nimport {ShowAllFilter, FilterAdd, FilterDelete, FilterClear, FilterSelect, FilterCancel} from './../api/api'\nimport {TableDataRegular, TableDataRegularExamples} from './../api/filter-config'\n\nexport default {\n  data() {\n    return {\n      tableData: [],\n      tableDataRegular: TableDataRegular,\n      tableDataRegularExamples: TableDataRegularExamples,\n//      添加部分\n      addFormVisible: false,\n      addform: {\n        match: '',\n        describe: '',\n      },\n//      选择部分\n      selectFormVisible: false,\n      selectform: {\n        id: '',\n      },\n//      删除部分\n      deleteFormVisible: false,\n      deleteform: {\n        id: '',\n      },\n      clearFormVisible: false,\n      cancelFormVisible: false,\n      formLabelWidth: '120px'\n    };\n  },\n  created() {\n    this.showAllFilter()\n  },\n  mounted() {\n    window.setInterval(() => {\n      this.showAllFilter()\n    }, 2000)\n  },\n  complete() {\n  },\n  methods: {\n    showAllFilter() {\n      this.$http.get(ShowAllFilter)\n        .then(res => {\n          console.log(res)\n          return res.json()\n        })\n        .then(data => {\n            console.log(data.data)\n            this.tableData = data.data\n          }\n        )\n    },\n    addFilter() {\n      this.$http.post(FilterAdd, this.addform)\n        .then(res => {\n          return res.json()\n        })\n        .then(data => {\n          if (data.code == 'error') {\n            this.$message({\n              showClose: true,\n              message: '接口有错误，上传失败！'\n            })\n            ;\n          }\n          else {\n            this.addFormVisible = false;\n          }\n        })\n    },\n    deleteFilter() {\n      this.$http.post(FilterDelete, this.deleteform)\n        .then(res => {\n          console.log(FilterDelete)\n          console.log(res)\n          return res.json()\n        })\n        .then(data => {\n          if (data.code == 'error') {\n            this.$message({\n              showClose: true,\n              message: '接口有错误，上传失败！'\n            })\n            ;\n          }\n          else {\n            this.deleteFormVisible = false;\n          }\n        })\n    },\n    selectFilter() {\n      this.$http.post(FilterSelect, this.selectform)\n        .then(res => {\n          console.log(FilterDelete)\n          console.log(res)\n          return res.json()\n        })\n        .then(data => {\n          if (data.code == 'error') {\n            this.$message({\n              showClose: true,\n              message: '接口有错误，上传失败！'\n            })\n            ;\n          }\n          else {\n            this.selectFormVisible = false;\n          }\n        })\n    },\n    clearFilter() {\n      this.$http.get(FilterClear)\n        .then(res => {\n          console.log(FilterClear)\n          console.log(res)\n          return res.json()\n        })\n        .then(data => {\n          if (data.code != 'ok') {\n            this.$message({\n              showClose: true,\n              message: '接口错误清理失败'\n            })\n            ;\n          }\n          else {\n            this.clearFormVisible = false;\n          }\n        })\n    },\n    cancelFilter() {\n      this.$http.get(FilterCancel)\n        .then(res => {\n          console.log(res)\n          return res.json()\n        })\n        .then(data => {\n          if (data.code != 'ok') {\n            this.$message({\n              showClose: true,\n              message: '接口错误清理失败'\n            })\n            ;\n          }\n          else {\n            this.cancelFormVisible = false;\n          }\n        })\n    },\n  }\n}\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/FilterRequest.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-collapse',{attrs:{\"accordion\":\"\"}},[_c('el-collapse-item',{attrs:{\"title\":\"已经添加的正则表达式\"}},[_c('div',[_c('el-row',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addFormVisible = true}}},[_vm._v(\"新增正则表达式\")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加新的正则表达式\",\"visible\":_vm.addFormVisible},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.addform}},[_c('el-form-item',{attrs:{\"label\":\"正则表达式\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addform.match),callback:function ($$v) {_vm.$set(_vm.addform, \"match\", $$v)},expression:\"addform.match\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addform.describe),callback:function ($$v) {_vm.$set(_vm.addform, \"describe\", $$v)},expression:\"addform.describe\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addFilter()}}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"success\"},on:{\"click\":function($event){_vm.selectFormVisible = true}}},[_vm._v(\"选择正则表达式\")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"选择正则表达式\",\"visible\":_vm.selectFormVisible},on:{\"update:visible\":function($event){_vm.selectFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.selectform}},[_c('el-form-item',{attrs:{\"label\":\"id\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.selectform.id),callback:function ($$v) {_vm.$set(_vm.selectform, \"id\", $$v)},expression:\"selectform.id\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.selectFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.selectFilter()}}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":function($event){_vm.cancelFormVisible = true}}},[_vm._v(\"取消正则表达式\")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"取消正则表达式\",\"visible\":_vm.cancelFormVisible},on:{\"update:visible\":function($event){_vm.cancelFormVisible=$event}}},[_c('p',[_vm._v(\"点击确认后会取消正则表达式\")]),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.cancelFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.cancelFilter()}}},[_vm._v(\"确 定\")])],1)]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":function($event){_vm.deleteFormVisible = true}}},[_vm._v(\"删除正则表达式\")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"删除正则表达式\",\"visible\":_vm.deleteFormVisible},on:{\"update:visible\":function($event){_vm.deleteFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.deleteform}},[_c('el-form-item',{attrs:{\"label\":\"id\",\"label-width\":_vm.formLabelWidth}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.deleteform.id),callback:function ($$v) {_vm.$set(_vm.deleteform, \"id\", $$v)},expression:\"deleteform.id\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.deleteFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.deleteFilter()}}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\"},on:{\"click\":function($event){_vm.clearFormVisible = true}}},[_vm._v(\"清空正则表达式\")]),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"清空正则表达式\",\"visible\":_vm.clearFormVisible},on:{\"update:visible\":function($event){_vm.clearFormVisible=$event}}},[_c('p',[_vm._v(\"确认后会清空所有的过滤正则表达式\")]),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.clearFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.clearFilter()}}},[_vm._v(\"确 定\")])],1)])],1)],1),_vm._v(\" \"),_c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData}},[_c('el-table-column',{attrs:{\"label\":\"id\",\"width\":\"width: 25%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.id))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"正则表达式\",\"width\":\"width: 25%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.match))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"描述\",\"width\":\"width: 25%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticStyle:{\"margin-left\":\"10px\"}},[_vm._v(_vm._s(scope.row.describe))])]}}])})],1)],1)]),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"以下是能够使用的正则表达式方法\"}},[_c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataRegular}},[_c('el-table-column',{attrs:{\"prop\":\"regular\",\"label\":\"正则表达式\",\"width\":\"width: 50%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"meaning\",\"label\":\"筛选含义\",\"width\":\"width: 50%\"}})],1)],1)]),_vm._v(\" \"),_c('el-collapse-item',{attrs:{\"title\":\"正则表达式使用例子\"}},[_c('div',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDataRegularExamples}},[_c('el-table-column',{attrs:{\"prop\":\"examples\",\"label\":\"示例\",\"width\":\"width: 50%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"way\",\"label\":\"写法\",\"width\":\"width: 50%\"}})],1)],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0f489bb0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/FilterRequest.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FilterRequest.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FilterRequest.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0f489bb0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./FilterRequest.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/FilterRequest.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}